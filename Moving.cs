 using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Moving : MonoBehaviour {
    public static float t;
    float speed = 360f;

    public Transform Base;
    public GameObject Servo2;
    public GameObject Servo3;
    public GameObject Servo4;
    public GameObject Servo5;
    public GameObject Servo6;
    public GameObject Servo7;
    public GameObject Servo8;
    public GameObject Servo9;
    public GameObject Servo10;

    public Transform Base2;
    public Transform Base3;
    public Transform Base4;
    public GameObject Servo22;
    public GameObject Servo32;
    public GameObject Servo42;

    Quaternion baseAngle, purposeAngle,pop;
    int Degree;
    [HideInInspector]
    public int num = 0;

    // Use this for initialization
    void Start () {
        /*baseAngle = Quaternion.Euler(0f, 0f, 0f);
        pop.eulerAngles = new Vector3(0, 0, 90);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        Base2.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t);
        baseAngle = Quaternion.Euler(0f, 0f, 0f);
        pop.eulerAngles = new Vector3(0, 0, 90);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        Base3.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t);
        baseAngle = Quaternion.Euler(0f, 0f, 0f);
        pop.eulerAngles = new Vector3(0, 0, 90);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        Base4.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t);
        baseAngle = Quaternion.Euler(0f, 0f, 0f);
        pop.eulerAngles = new Vector3(0, 0, 90);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        Base2.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t);*/

    }

	// Update is called once per frame
	public IEnumerator Randommove() {
        //回転Base(外側から順に1,2,3,4)
        GameObject base01 = GameObject.Find("Base_Arm4");
        baseAngle = Quaternion.Euler(0f,0f,0f);
        pop.eulerAngles = new Vector3(0, 0, 90);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        base01.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t);
        //yield return new WaitForSeconds(1.0f);
        GameObject base02 = GameObject.Find("Base_Arm3");
        baseAngle = Quaternion.Euler(0f, 0f, 0f);
        pop.eulerAngles = new Vector3(0, 0, 90);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        base02.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t);
        //yield return new WaitForSeconds(1.0f);
        GameObject base03 = GameObject.Find("Base_Arm2");
        baseAngle = Quaternion.Euler(0f, 0f, 0f);
        pop.eulerAngles = new Vector3(0, 0, 90);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        base03.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t);
        yield return new WaitForSeconds(1.0f);

        //第2Servo(y軸回転)
        GameObject servo02 = GameObject.Find("Motor1-2");
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, 90, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo02.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo22 = GameObject.Find("Motor2-2");
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, 90, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo22.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo32 = GameObject.Find("Motor3-2");
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, 90, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo32.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo42 = GameObject.Find("Motor4-2");
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, 0, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo42.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t);
        yield return new WaitForSeconds(1.0f);

        int numnum = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().Seacence;
        //Debug.Log(numnum+"wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww");

        //第3Servo(z軸回転)
        GameObject servo03 = GameObject.Find("Motor1-3");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][0];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo03.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo23 = GameObject.Find("Motor2-3");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][8];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo23.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo33 = GameObject.Find("Motor3-3");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][16];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo33.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo43 = GameObject.Find("Motor4-3");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][24];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo43.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        yield return new WaitForSeconds(0.001f);

        //第4Servo(x軸回転)
        GameObject servo04 = GameObject.Find("Motor1-4");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][1];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo04.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo24 = GameObject.Find("Motor2-4");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][9];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo24.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo34 = GameObject.Find("Motor3-4");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][17];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo34.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo44 = GameObject.Find("Motor4-4");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][25];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo44.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        yield return new WaitForSeconds(0.001f);

        //第5Servo(y軸回転)
        GameObject servo05 = GameObject.Find("Motor1-5");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][2];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo05.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo25 = GameObject.Find("Motor2-5");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][10];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo25.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo35 = GameObject.Find("Motor3-5");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][18];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo35.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //ield return new WaitForSeconds(1.0f);
        GameObject servo45 = GameObject.Find("Motor4-5");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][26];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo45.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        yield return new WaitForSeconds(0.001f);

        //第6Servo(x軸回転)
        GameObject servo06 = GameObject.Find("Motor1-6");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][3];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo06.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo26 = GameObject.Find("Motor2-6");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][11];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo26.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo36 = GameObject.Find("Motor3-6");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][19];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo36.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo46 = GameObject.Find("Motor4-6");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][27];
        //ebug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo46.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        yield return new WaitForSeconds(0.001f);

        //第7Servo(y軸回転)
        GameObject servo07 = GameObject.Find("Motor1-7");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][4];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo07.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo27 = GameObject.Find("Motor2-7");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][12];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo27.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo37 = GameObject.Find("Motor3-7");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][20];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo37.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo47 = GameObject.Find("Motor4-7");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][28];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo47.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        yield return new WaitForSeconds(0.001f);

        //第8Servo(x軸回転)
        GameObject servo08 = GameObject.Find("Motor1-8");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][5];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo08.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo28 = GameObject.Find("Motor2-8");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][13];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo28.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo38 = GameObject.Find("Motor3-8");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][21];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo38.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo48 = GameObject.Find("Motor4-8");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][29];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo48.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        yield return new WaitForSeconds(0.001f);

        //第9Servo(y軸回転)
        GameObject servo09 = GameObject.Find("Motor1-9");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][6];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo09.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo29 = GameObject.Find("Motor2-9");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][14];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo29.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo39 = GameObject.Find("Motor3-9");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][22];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo39.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo49 = GameObject.Find("Motor4-9");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][30];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo49.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        yield return new WaitForSeconds(0.001f);

        //第10Servo(x軸回転)
        GameObject servo10 = GameObject.Find("Motor1-10");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][7];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo10.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo102 = GameObject.Find("Motor2-10");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][15];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo102.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo103 = GameObject.Find("Motor3-10");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][23];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo103.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        //yield return new WaitForSeconds(1.0f);
        GameObject servo104 = GameObject.Find("Motor4-10");
        Degree = GameObject.Find("GenericAlgorithms").GetComponent<GenericArgorithms03>().currentPopulation[numnum][31];
        //Debug.Log(Degree);
        baseAngle = Quaternion.Euler(-90f, 0f, 0f);
        pop.eulerAngles = new Vector3(-90, Degree, 0);
        purposeAngle = Quaternion.Euler(pop.eulerAngles);
        t += speed * Time.deltaTime;
        servo104.transform.localRotation = Quaternion.Lerp(baseAngle, purposeAngle, t / 10);
        yield return new WaitForSeconds(0.001f);

        //overlap();
        // Moving stasta = new Moving();
        // GetPic getpic = new GetPic();
        // getpic.GetPixels();
        //GetPic();
    }
}
